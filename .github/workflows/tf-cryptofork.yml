name: 'Cryptofork Infra Deploy'

on:
  push:
    branches:
      - 'dev-*'
      - 'stage-*'
      - 'prod-*'
      - 'main'

jobs:
  deploy_dev:
    name: 'Deploy Infra - DEV'
    runs-on: ubuntu-latest
    environment: dev
    if: startsWith('refs/heads/dev-', github.ref)
    # github.ref == 'refs/heads/dev-*'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/dev fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform/environment/dev plan
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/dev apply -auto-approve"

  deploy_stage:
    name: 'Deploy Infra - STAGE '
    runs-on: ubuntu-latest
    environment: stage
    if: startsWith('refs/heads/stage-', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/stage fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: echo "terraform -chdir=terraform/environment/stage plan"
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/stage apply -auto-approve"

  deploy_prod:
    name: 'Deploy Infra - PROD'
    runs-on: ubuntu-latest
    environment: prod
    if: startsWith('refs/heads/prod-', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/prod fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: echo "terraform -chdir=terraform/environment/prod plan"
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/prod apply -auto-approve"

