name: 'Cryptofork Infra Deploy'

on:
  push:
    branches:
      - 'dev-*'
      - 'stage-*'
      - 'prod-*'
  
  pull_request:
    branches:
      - main
    types: [ closed ]

jobs:
  deploy_dev:
    name: 'Deploy Infra - DEV'
    runs-on: ubuntu-latest
    environment: dev
    if: startsWith(github.ref, 'refs/heads/dev-') || github.event.pull_request.merged == true
    # github.ref == 'refs/heads/dev-*'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: print value
        run: echo ${{ github.ref }} - ${{ github.base_ref }} - ${{ github.head_ref }}

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/dev fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: echo "terraform -chdir=terraform/environment/dev plan"

      - name: Terraform Apply
        #if: github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/dev apply -auto-approve"

  deploy_stage:
    name: 'Deploy Infra - STAGE '
    runs-on: ubuntu-latest
    environment: stage
    if: startsWith(github.ref , 'refs/heads/stage-')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/stage fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: echo "terraform -chdir=terraform/environment/stage plan"

      - name: Terraform Apply
        #if: github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/stage apply -auto-approve"

  deploy_prod:
    name: 'Deploy Infra - PROD'
    runs-on: ubuntu-latest
    environment: prod
    if: startsWith(github.ref , 'refs/heads/prod-')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: echo "terraform -chdir=terraform/environment/prod fmt -check"

      - name: Terraform Init
        id: init
        run: echo "terraform init"

      - name: Terraform Plan
        id: plan
        run: echo "terraform -chdir=terraform/environment/prod plan"

      - name: Terraform Apply
        #if: github.event.pull_request.merged == true
        run: echo "terraform -chdir=terraform/environment/prod apply -auto-approve"

  # main_apply:
  #   name: 'Terrafom Apply - MAIN '
  #   runs-on: ubuntu-latest
  #   if: github.event.pull_request.merged == true
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Terraform Format
  #       id: fmt
  #       run: echo "terraform fmt -check"

  #     - name: Terraform Init
  #       id: init
  #       run: echo "terraform init"

  #     - name: Terraform Plan
  #       id: plan
  #       run: echo "terraform plan"
  #       continue-on-error: true

  #     - name: Terraform Apply
  #       run: echo "terraform  apply -auto-approve"

